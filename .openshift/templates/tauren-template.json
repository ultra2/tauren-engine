{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "tauren",
    "annotations": {
      "openshift.io/display-name": "Node.js + MongoDB (Persistent)",
      "description": "An example Node.js application with a MongoDB database. For more information about using this template, including OpenShift considerations, see https://github.com/openshift/nodejs-ex/blob/master/README.md.",
      "tags": "quickstart,nodejs",
      "iconClass": "icon-nodejs"
    }
  },
  "message": "The following service(s) have been created in your project: ${ENGINE_SERVICE_NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/openshift/nodejs-ex/blob/master/README.md.",
  "labels": {
    "template": "tauren"
  },
  "objects": [
    {
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "${ENGINE_SERVICE_NAME}"
      },
      "stringData": {
        "database-user": "${DATABASE_USER}",
        "database-password": "${DATABASE_PASSWORD}",
        "database-admin-password": "${DATABASE_ADMIN_PASSWORD}"
      }
    },
     {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Defines how to deploy the database"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "mongodb"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "openshift",
                "name": "mongodb:3.2"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${DATABASE_SERVICE_NAME}"
        },
        "template": {
          "metadata": {
            "name": "${DATABASE_SERVICE_NAME}",
            "labels": {
              "name": "${DATABASE_SERVICE_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "mongodb",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 27017
                  }
                ],
                "env": [
                  {
                    "name": "MONGODB_USER",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${ENGINE_SERVICE_NAME}",
                        "key": "database-user"
                      }
                    }
                  },
                  {
                    "name": "MONGODB_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${ENGINE_SERVICE_NAME}",
                        "key": "database-password"
                      }
                    }
                  },
                  {
                    "name": "MONGODB_DATABASE",
                    "value": "${DATABASE_NAME}"
                  },
                  {
                    "name": "MONGODB_ADMIN_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${ENGINE_SERVICE_NAME}",
                        "key": "database-admin-password"
                      }
                    }
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 3,
                  "exec": {
                    "command": [
                      "/bin/sh",
                      "-i",
                      "-c",
                      "mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD --eval=\"quit()\""
                    ]
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 30,
                  "tcpSocket": {
                    "port": 27017
                  }
                },
                "resources": {
                  "limits": {
                    "memory": "${MEMORY_MONGODB_LIMIT}"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "${DATABASE_SERVICE_NAME}-data",
                    "mountPath": "/var/lib/mongodb/data"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "${DATABASE_SERVICE_NAME}-data",
                "persistentVolumeClaim": {
                  "claimName": "${DATABASE_SERVICE_NAME}"
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${ENGINE_SERVICE_NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods",
          "service.alpha.openshift.io/dependencies": "[{\"name\": \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "web",
            "port": 8080,
            "targetPort": 8080
          },
          {
            "name": "debug",
            "port": 9229,
            "targetPort": 9229
          }
        ],
        "selector": {
          "name": "${ENGINE_SERVICE_NAME}"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${ENGINE_SERVICE_NAME}"
      },
      "spec": {
        "to": {
          "kind": "Service",
          "name": "${ENGINE_SERVICE_NAME}"
        },
        "port": {
          "targetPort": "web"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${ENGINE_SERVICE_NAME}-debug"
      },
      "spec": {
        "to": {
          "kind": "Service",
          "name": "${ENGINE_SERVICE_NAME}"
        },
        "port": {
          "targetPort": "debug"
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${ENGINE_SERVICE_NAME}",
        "annotations": {
          "description": "Keeps track of changes in the application image"
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "node"
      },
      "spec": {
        "tags": [
          {
            "name": "latest",
            "from": {
              "kind": "DockerImage",
              "name": "ryanj/centos7-s2i-nodejs:6.3.1"
            }
          }
        ]
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${ENGINE_SERVICE_NAME}",
        "annotations": {
          "description": "Defines how to build the application"
        }
      },
      "spec": {
        "source": {
          "type": "Git",
          "git": {
            "uri": "https://github.com/ultra2/tauren-engine.git",
            "ref": "master"
          }
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
            "from": {
              "kind": "ImageStreamTag",
              "name": "node:latest"
            }
          }
        },
        "runPolicy": "SerialLatestOnly",
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${ENGINE_SERVICE_NAME}:latest"
          }
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChange": {
              "from": {
                "kind": "ImageStreamTag",
                "name": "node:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ]
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${ENGINE_SERVICE_NAME}",
        "annotations": {
          "description": "Defines how to deploy the application server"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${ENGINE_SERVICE_NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${ENGINE_SERVICE_NAME}:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${ENGINE_SERVICE_NAME}"
        },
        "template": {
          "metadata": {
            "name": "${ENGINE_SERVICE_NAME}",
            "labels": {
              "name": "${ENGINE_SERVICE_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${ENGINE_SERVICE_NAME}",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 8080
                  }
                ],
                "env": [
                  {
                    "name": "ENGINE_SERVICE_NAME",
                    "value": "${ENGINE_SERVICE_NAME}"
                  },
                  {
                    "name": "WORKING_DB_URL",
                    "value": "${WORKING_DB_URL}"
                  },
                  {
                    "name": "DATABASE_SERVICE_NAME",
                    "value": "${DATABASE_SERVICE_NAME}"
                  },
                  {
                    "name": "MONGODB_USER",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${ENGINE_SERVICE_NAME}",
                        "key": "database-user"
                      }
                    }
                  },
                  {
                    "name": "MONGODB_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${ENGINE_SERVICE_NAME}",
                        "key": "database-password"
                      }
                    }
                  },
                  {
                    "name": "MONGODB_DATABASE",
                    "value": "${DATABASE_NAME}"
                  },
                  {
                    "name": "MONGODB_ADMIN_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${ENGINE_SERVICE_NAME}",
                        "key": "database-admin-password"
                      }
                    }
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 3,
                  "httpGet": {
                    "path": "/",
                    "port": 8080
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 30,
                  "httpGet": {
                    "path": "/",
                    "port": 8080
                  }
                },
                "resources": {
                  "limits": {
                    "memory": "${MEMORY_LIMIT}"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "${VOLUME_CAPACITY}"
          }
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Exposes the database server"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "mongodb",
            "port": 27017,
            "targetPort": 27017
          }
        ],
        "selector": {
          "name": "${DATABASE_SERVICE_NAME}"
        }
      }
    }
   
  ],
  "parameters": [
    {
      "name": "ENGINE_SERVICE_NAME",
      "displayName": "Engine Service Name",
      "required": true,
      "value": "engine"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "description": "Maximum amount of memory the Node.js container can use.",
      "required": true,
      "value": "512Mi"
    },
    {
      "name": "MEMORY_MONGODB_LIMIT",
      "displayName": "Memory Limit (MongoDB)",
      "description": "Maximum amount of memory the MongoDB container can use.",
      "required": true,
      "value": "512Mi"
    },
    {
      "name": "VOLUME_CAPACITY",
      "displayName": "Volume Capacity",
      "description": "Volume space available for data, e.g. 512Mi, 2Gi",
      "value": "1Gi",
      "required": true
    },
    {
      "name": "DATABASE_SERVICE_NAME",
      "displayName": "Database Service Name",
      "required": true,
      "value": "mongodb"
    },
    {
      "name": "DATABASE_USER",
      "displayName": "MongoDB Username",
      "description": "Username for MongoDB user that will be used for accessing the database.",
      "generate": "expression",
      "from": "user[A-Z0-9]{3}"
    },
    {
      "name": "DATABASE_PASSWORD",
      "displayName": "MongoDB Password",
      "description": "Password for the MongoDB user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "DATABASE_NAME",
      "displayName": "Database Name",
      "required": true,
      "value": "sampledb"
    },
    {
      "name": "DATABASE_ADMIN_PASSWORD",
      "displayName": "Database Administrator Password",
      "description": "Password for the database admin user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "WORKING_DB_URL",
      "displayName": "WORKING DB URL",
      "description": "WORKING DB URL that will be used for accessing the database."
    }
  ]
}