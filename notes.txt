Install node modules:
---------------------
$ npm install typescript --save
$ npm install grunt --save
$ npm install grunt-cli --save
$ npm install grunt-ts --save
$ npm install grunt-tslint --save
$ npm install grunt-contrib-watch --save
$ npm install tslint --save

$ npm install mongodb --save
$ npm install gridfs-stream  --save 
$ npm install body-parser --save
$ npm install express --save
$ npm install node-uuid --save
$ npm install mime-types --save
$ npm install jszip@3 --save
$ npm install request --save

Install Typings:
----------------

????? => $ node_modules/.bin/typings typings i env~node -SG

npm install --save @types/mongodb
npm install --save @types/gridfs-stream
npm install --save @types/body-parser
npm install --save @types/express
npm install --save @types/node-uuid
npm install --save @types/mime
npm install --save @types/jszip
npm install --save @types/request
npm install --save @types/webpack
npm install --save @types/memory-fs

Commands
---------
count files in a directory: find node_modules -type f | wc -l
delete unused files: modclean -n safe

after change .gitignore run this!!!! (NOTE : First commit your current changes, or you will lose them) 
git rm -r --cached .
git add .
git commit -m "fixed untracked files"

Docker image build
-------------------
cd to root of project source where Dockerfile resides 
docker build -t ultra2/tauren:1.0.6 .
docker push ultra2/tauren


Docker image build (new method)
——————————————————————
1. cd into project directory

//it builds the app image (run Dockerfile) 
docker build -t ultra2/tauren:1.0.6 .

//it builds the container (run docker-compose.yml)
//it runs the container (check result in console and Kitematic) 
docker-compose up --build

it pushes up the container to dockerhub
docker push ultra2/tauren-engine








